version: '3.8'

services:
  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: clubdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d clubdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    restart: always
    environment:
      DB_HOST: db
      DB_NAME: clubdb
      DB_USER: user
      DB_PASSWORD: password
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app

  frontend:
    build: ./frontend
    restart: always
    ports:
      - "80:80" # El frontend expone el puerto 80 del host
      - "443:443" # El frontend expone el puerto 443 del host
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ./frontend:/usr/share/nginx/html # Monta los archivos estáticos para desarrollo
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf # Monta la configuración de Nginx

  adminer:
    image: adminer:latest # Imagen oficial de Adminer
    container_name: tu_adminer
    restart: always
    ports:
      - "8080:8080" # Mapea el puerto 8080 del contenedor de Adminer al 8080 de tu máquina
    depends_on:
      db:
        condition: service_healthy # Asegura que la BD esté lista antes de iniciar Adminer
    # No se define ningún 'volumes' para Adminer, según tu petición.

volumes:
  db_data: